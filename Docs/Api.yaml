---
openapi: 3.0.1
info:
  title: ApiSupMagasin
  version: v1
paths:
  "/Borne/All":
    get:
      tags:
      - Borne
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Borne/{id}":
    get:
      tags:
      - Borne
      operationId: idBorne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Borne/addBorne":
    post:
      tags:
      - Borne
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Borne"
          application/json:
            schema:
              "$ref": "#/components/schemas/Borne"
          text/json:
            schema:
              "$ref": "#/components/schemas/Borne"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Borne"
      responses:
        '200':
          description: Success
  "/Borne/updateBorne":
    put:
      tags:
      - Borne
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Borne"
          application/json:
            schema:
              "$ref": "#/components/schemas/Borne"
          text/json:
            schema:
              "$ref": "#/components/schemas/Borne"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Borne"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Borne/DeleteOnly":
    delete:
      tags:
      - Borne
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Borne"
          application/json:
            schema:
              "$ref": "#/components/schemas/Borne"
          text/json:
            schema:
              "$ref": "#/components/schemas/Borne"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Borne"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Borne/Delete":
    delete:
      tags:
      - Borne
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Borne"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Borne"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Borne"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Borne"
              nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Customer/All":
    get:
      tags:
      - Customer
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Customer/{id}":
    get:
      tags:
      - Customer
      operationId: Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Customer/addCustomer":
    post:
      tags:
      - Customer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Customer"
          application/json:
            schema:
              "$ref": "#/components/schemas/Customer"
          text/json:
            schema:
              "$ref": "#/components/schemas/Customer"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Customer"
      responses:
        '200':
          description: Success
  "/Customer/updateCustomer":
    put:
      tags:
      - Customer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Customer"
          application/json:
            schema:
              "$ref": "#/components/schemas/Customer"
          text/json:
            schema:
              "$ref": "#/components/schemas/Customer"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Customer"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Customer/Delete":
    delete:
      tags:
      - Customer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Customer"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Customer"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Customer"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Customer"
              nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/":
    get:
      tags:
      - Default
      responses:
        '200':
          description: Success
  "/Employe/All":
    get:
      tags:
      - Employe
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Employe/{id}":
    get:
      tags:
      - Employe
      operationId: idEmploye
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Employe/addEmploye":
    post:
      tags:
      - Employe
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Employe"
          application/json:
            schema:
              "$ref": "#/components/schemas/Employe"
          text/json:
            schema:
              "$ref": "#/components/schemas/Employe"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Employe"
      responses:
        '200':
          description: Success
  "/Employe/updateEmploye":
    put:
      tags:
      - Employe
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Employe"
          application/json:
            schema:
              "$ref": "#/components/schemas/Employe"
          text/json:
            schema:
              "$ref": "#/components/schemas/Employe"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Employe"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Employe/Delete":
    delete:
      tags:
      - Employe
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Employe"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Employe"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Employe"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Employe"
              nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Magasin/All":
    get:
      tags:
      - Magasin
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Magasin/{id}":
    get:
      tags:
      - Magasin
      operationId: idMagasin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Magasin/addMagasin":
    post:
      tags:
      - Magasin
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Magasin"
          application/json:
            schema:
              "$ref": "#/components/schemas/Magasin"
          text/json:
            schema:
              "$ref": "#/components/schemas/Magasin"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Magasin"
      responses:
        '200':
          description: Success
  "/Magasin/updateMagasin":
    put:
      tags:
      - Magasin
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Magasin"
          application/json:
            schema:
              "$ref": "#/components/schemas/Magasin"
          text/json:
            schema:
              "$ref": "#/components/schemas/Magasin"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Magasin"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Magasin/Delete":
    delete:
      tags:
      - Magasin
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Magasin"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Magasin"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Magasin"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Magasin"
              nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Produit/All":
    get:
      tags:
      - Produit
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Produit/{id}":
    get:
      tags:
      - Produit
      operationId: idProduit
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Produit/addProduit":
    post:
      tags:
      - Produit
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Produit"
          application/json:
            schema:
              "$ref": "#/components/schemas/Produit"
          text/json:
            schema:
              "$ref": "#/components/schemas/Produit"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Produit"
      responses:
        '200':
          description: Success
  "/Produit/updateProduit":
    put:
      tags:
      - Produit
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/Produit"
          application/json:
            schema:
              "$ref": "#/components/schemas/Produit"
          text/json:
            schema:
              "$ref": "#/components/schemas/Produit"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Produit"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/Produit/DeleteProd":
    delete:
      tags:
      - Produit
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Produit"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Produit"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Produit"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Produit"
              nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/user/auth":
    post:
      tags:
      - User
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/User"
          application/json:
            schema:
              "$ref": "#/components/schemas/User"
          text/json:
            schema:
              "$ref": "#/components/schemas/User"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/User"
      responses:
        '200':
          description: Success
components:
  schemas:
    EtatBorne:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      format: int32
    Borne:
      type: object
      properties:
        ID:
          type: string
          nullable: true
        Position:
          type: string
          nullable: true
        EtatBorne:
          "$ref": "#/components/schemas/EtatBorne"
    Sexe:
      enum:
      - 1
      - 2
      type: integer
      format: int32
    Customer:
      type: object
      properties:
        Id:
          type: string
          nullable: true
        Sexe:
          "$ref": "#/components/schemas/Sexe"
        Name:
          type: string
          nullable: true
        FirstName:
          type: string
          nullable: true
        BirthdayDay:
          type: string
          format: date-time
        Adress:
          type: string
          nullable: true
        Postal_Code:
          type: string
          nullable: true
        City:
          type: string
          nullable: true
        Last_Time:
          type: string
          format: date-time
        AnnualFrequentation:
          type: integer
          format: int32
        PanierMoyen:
          type: number
          format: float
        RIB:
          type: string
          nullable: true
        TempsMoyen:
          type: string
          format: date-time
        Photo:
          type: string
          format: byte
          nullable: true
        Email:
          type: string
          nullable: true
    Magasin:
      type: object
      properties:
        ID:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        Adress:
          type: string
          nullable: true
        Postal_Code:
          type: string
          nullable: true
        City:
          type: string
          nullable: true
        Email:
          type: string
          nullable: true
        IdResponsable:
          "$ref": "#/components/schemas/Employe"
        NbRayon:
          type: integer
          format: int32
        DateCreation:
          type: string
          format: date-time
    Employe:
      type: object
      properties:
        ID:
          type: string
          nullable: true
        Nom:
          type: string
          nullable: true
        Prenom:
          type: string
          nullable: true
        NumeroSS:
          type: string
          nullable: true
        NaissanceDate:
          type: string
          format: date-time
        EmbaucheDate:
          type: string
          format: date-time
        Email:
          type: string
          nullable: true
        Manager:
          "$ref": "#/components/schemas/Employe"
        Magasin:
          "$ref": "#/components/schemas/Magasin"
        SortieDate:
          type: string
          format: date-time
        coeeficcient:
          type: integer
          format: int32
        isSanctionned:
          type: boolean
    Fournisseur:
      type: object
    Stock:
      type: object
      properties:
        ID:
          type: integer
          format: int32
        PeremptionDelay:
          type: string
          format: date-time
        Quantite:
          type: integer
          format: int32
        EntryDate:
          type: string
          format: date-time
    Gamme:
      enum:
      - 1
      - 2
      - 3
      type: integer
      format: int32
    Categorie:
      enum:
      - 1
      - 2
      - 3
      type: integer
      format: int32
    Commentaire:
      type: object
      properties:
        ID:
          type: integer
          format: int32
        ID_Produit:
          type: integer
          format: int32
        IDClient:
          type: integer
          format: int32
        Comment:
          type: string
          nullable: true
        Note:
          type: integer
          format: int32
        fdate:
          type: string
          format: date-time
    Produit:
      type: object
      properties:
        ID:
          type: string
          nullable: true
        Designation:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        Poids:
          type: number
          format: float
        Fournisseur:
          "$ref": "#/components/schemas/Fournisseur"
        PeremptionDate:
          type: string
          format: date-time
        stock:
          "$ref": "#/components/schemas/Stock"
        Gamme:
          "$ref": "#/components/schemas/Gamme"
        Categorie:
          type: array
          items:
            "$ref": "#/components/schemas/Categorie"
          nullable: true
        Commentaire:
          type: array
          items:
            "$ref": "#/components/schemas/Commentaire"
          nullable: true
    User:
      type: object
      properties:
        Login:
          type: string
          nullable: true
        Password:
          type: string
          nullable: true
        Token:
          type: string
          nullable: true
